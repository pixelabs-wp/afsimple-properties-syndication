<?php 
/**
 * Generated by the WordPress Option Page generator
 * at http://jeremyhixon.com/wp-tools/option-page/
 */

class UploadCSV {
	private $upload_csv_options;

	public function __construct() {
		
	}

	public function upload_csv_add_plugin_page() {

        $icon = plugin_dir_url( __FILE__ ) .'src/'.'icon.png';
		add_menu_page(
			'Upload CSV', // page_title
			'Upload CSV', // menu_title102418
			'manage_options', // capability
			'upload-csv', // menu_slug
			array( $this, 'upload_csv_create_admin_page' ), // function
            $icon, // icon_url
			2 // position
		);
	}

	public function upload_csv_create_admin_page() {

        $nds_add_meta_nonce = wp_create_nonce( 'nds_add_user_meta_form_nonce' ); 
		$this->upload_csv_options = get_option( 'upload_csv_option_name' ); ?>


		<div class="wrap">
			<h2>Upload CSV</h2>
			<p>Manage Properties by uploading a CSV FIle!</p>
			<?php settings_errors(); ?>
          
			<form action="" method="post" enctype="multipart/form-data" id="formUpload">
            <input name='action' type="hidden" value='uploadCSVHandler'>
				<?php
					settings_fields( 'upload_csv_option_group' );
					do_settings_sections( 'upload-csv-admin' );
					submit_button("Upload");
				?>
				<p id="msg"></p>
				<div id="results" style="border: 1px solid grey;"></div>
			</form>
            <script>
jQuery("#formUpload").submit(function(event) {

/* stop form from submitting normally */
event.preventDefault();

/* get the action attribute from the <form action=""> element */

var property = document.getElementById('file_0').files[0];
var image_name = property.name;
var csv_extension = image_name.split('.').pop().toLowerCase();

if (jQuery.inArray(csv_extension, ['csv', '']) == -1) {
	alert("Invalid filetype");
} else {
	var form_data = new FormData();
	form_data.append("file", property);
	form_data.append("action", "uploadCSVHandler");
	console.log(form_data);

	var ajaxscript = {
		ajax_url: '<?php echo admin_url('admin-ajax.php'); ?>'
	}
	jQuery.ajax({
		url: ajaxscript.ajax_url,
		method: 'POST',
		data: form_data,
		contentType: false,
		cache: false,
		processData: false,
		beforeSend: function() {
			jQuery('#msg').html('Loading......');
		},
		success: function(data) {



			var message = document.querySelector("#msg");
			var response = JSON.parse(data);
			console.log(response);
			message.innerHTML = "";
			if (response.uploadStatus == "failure") {
				message.innerHTML += `
			<div class="notice notice-error is-dismissible">
<p>Uploading Error, Contact Server Administrator</p>
</div>		`;

			} else {
				//if CSV is successfully uploaded
				message.innerHTML += `
		<div class="notice notice-success is-dismissible">
	<p>${response.filename} Uploaded! <br> Conversion Initiated at ${response.datetime}</p>
</div>`;
				if (response.json.uploadStatus == "success" && response.json.dataStatus == "populated") {
					message.innerHTML += `
		<div class="notice notice-success is-dismissible">
	<p>${response.filename} Converted! at ${response.datetime}</p>
</div>
<input type="hidden" value='${JSON.stringify(response)}' id="jsonData">
`;

startUpload();
				} else {
					message.innerHTML += `
			<div class="notice notice-error is-dismissible">
<p>Conversion Error, Possible Reasons: Empty File <br> Try again if the issue still presists, contact server Administration</p>
</div>`;
				}

			}




		}
	});
}


});


function readTextFile(file, callback) {
    var rawFile = new XMLHttpRequest();
    rawFile.overrideMimeType("application/json");
    rawFile.open("GET", file, true);
    rawFile.onreadystatechange = function() {
        if (rawFile.readyState === 4 && rawFile.status == "200") {
            callback(rawFile.responseText);
        }
    }
    rawFile.send(null);
}




function startUpload(){

	var jsonData = document.getElementById("jsonData").value;
	json = JSON.parse(jsonData);
	var jsonFile = json.json.filename;
//usage:
readTextFile(jsonFile, function(text){
    var data = JSON.parse(text);
	recursiveUpload(data, 0);

//    console.log(data[0]);
// 	data.forEach((singleProperty)=>{
// 		
// 		console.log(singleProperty);
// 	})



});


function recursiveUpload(propertyData, i){

	var results = document.getElementById("results");
	var ajaxscript = {
		ajax_url: '<?php echo admin_url('admin-ajax.php'); ?>'
	}
	

      if(propertyData[i]){
		var numItems = propertyData[i].length;
		var allItems = 28;
		var singleProperty = propertyData[i];
		results.innerHTML += `
			<p style="  position: relative;   font-family: monospace;
		    background: #0080003b;
		    color: black;
		    padding: 3px;    margin: 0px;
		    border-bottom: 1px solid grey;">${singleProperty[3]} Fetched! <br>
			<small>Total Items Loaded: ${numItems} / ${allItems}</small>
			<small style="
    position: absolute;
    right: 10px;
    bottom: 0;
">${Date()} </small></p>
				`;
	

		var images = singleProperty[20];
		images = images.split("|");
		images.forEach(element => {
			console.log(element);
		});
			singleProperty[20].forEach(element => {
				console.log(element);
			});
        	console.log("Sent", i);
			// jQuery.ajax({
			// 	url: ajaxscript.ajax_url+"?action=uploadHandler",
			// 	method: 'POST',
			// 	data:{"data":singleProperty},
    		// 	dataType: "json",
			// 	success: function(data) {
			// 		console.log("recieved", data);

			// 	}
			// });
			

            var newi = i + 1;
		    recursiveUpload(propertyData, newi);
      } else {
		results.innerHTML += `
			<p style="   position: relative;  font-family: monospace;
		    background: #ff00004a;
		    color: black;
		    padding: 3px;    margin: 0px;
		    border-bottom: 1px solid grey;">All Properties Fetched!<small style="
    position: absolute;
    right: 10px;
    bottom: 0;
">${Date()} </small></p>
				`;
      }
      
  
}














	// var ajaxscript = {
	// 	ajax_url: '<?php echo admin_url('admin-ajax.php'); ?>'
	// }

	
	// jQuery.ajax({
	// 	url: ajaxscript.ajax_url,
	// 	method: 'POST',
	// 	data: {
	// 		action: "",
	// 		filename: jsonFile
	// 	},
	// 	beforeSend: function() {
	// 		jQuery('#msg').html('Loading......');
	// 	},
	// 	success: function(data) {}});
	
}
            </script>
		</div>
	<?php }

	public function upload_csv_page_init() {
		register_setting(
			'upload_csv_option_group', // option_group
			'upload_csv_option_name', // option_name
			array( $this, 'upload_csv_sanitize' ) // sanitize_callback
		);

		add_settings_section(
			'upload_csv_setting_section', // id
			'Settings', // title
			array( $this, 'upload_csv_section_info' ), // callback
			'upload-csv-admin' // page
		);

		add_settings_field(
			'file_0', // id
			'File', // title
			array( $this, 'file_0_callback' ), // callback
			'upload-csv-admin', // page
			'upload_csv_setting_section' // section
		);
	}

	public function upload_csv_sanitize($input) {
		$sanitary_values = array();
		if ( isset( $input['file_0'] ) ) {
			$sanitary_values['file_0'] = sanitize_text_field( $input['file_0'] );
		}

		return $sanitary_values;
	}

	public function upload_csv_section_info() {
		
	}

	public function file_0_callback() {
		printf('<input class="regular-text" type="file" name="upload_csv_option_name[file_0]" id="file_0" value="">');
	}

}
if ( is_admin() )
	$upload_csv = new UploadCSV();

/* 
 * Retrieve this value with:
 * $upload_csv_options = get_option( 'upload_csv_option_name' ); // Array of All Options
 * $file_0 = $upload_csv_options['file_0']; // File
 */
